[project]
name = "jubilant"
description = "Juju CLI wrapper for charm integration testing"
readme = "README.md"
requires-python = ">=3.12"
dynamic = ["version"]
dependencies = [
    "PyYAML==6.*",
]

[dependency-groups]
dev = [
    "ops==2.19.4",  # for static type checking test charms
    "pyright==1.1.397",
    "pytest==8.3.4",
    "pytest-cov==6.0.0",
    "requests>=2.32.3",
    "ruff==0.9.6",
]
docs = [
    "sphinx==8.1.3",
    "sphinx-rtd-theme==3.0.2",
]

# Linting tools configuration
[tool.ruff]
line-length = 99
target-version = "py312"
extend-exclude = ["docs/*"]

# Ruff formatter configuration
[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I001",
    # pep8-naming
    "N",
    # flake8-builtins
    "A",
    # pyupgrade
    "UP",
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # Ruff specific
    "RUF",
    # Perflint
    "PERF",
    # pyflakes-docstrings
    "D",
]
ignore = [
    # Use of `assert` detected
    "S101",

    # `subprocess` call: check for execution of untrusted input
    "S603",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id", "min", "map", "range", "type", "input", "format"]

[tool.ruff.lint.per-file-ignores]
"jubilant/statustypes.py" = [
    # Missing docstring in public class
    "D101",
]
"tests/*" = [
    # All documentation linting.
    "D",
    # Use of possibly insecure function (eval)
    "S307",
    # Line too long
    "E501",
]

[tool.pyright]
include = ["jubilant", "tests"]
pythonVersion = "3.12"
pythonPlatform = "All"
typeCheckingMode = "strict"
reportPrivateUsage = false

[tool.pytest.ini_options]
pythonpath = [
  "."
]
